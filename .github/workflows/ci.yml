on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - "main"

name: "CI"

env:
  PROTOC_VERSION: '3.25.3'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - name: Cache protoc
        uses: actions/cache@v4
        with:
          path: ~/.local/bin
          key: protoc-${{ env.PROTOC_VERSION }}-${{ runner.os }}
          restore-keys: |
            protoc-${{ env.PROTOC_VERSION }}-
            protoc-
      - name: install protoc
        uses: taiki-e/install-action@v2
        with:
          tool: protoc@${{ env.PROTOC_VERSION }}
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Check formatting
        run: cargo fmt --all --check
      - name: Run clippy
        run: cargo clippy --all-features --tests -- -D warnings

  unused_dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - uses: dtolnay/rust-toolchain@nightly
      - name: Cache protoc
        uses: actions/cache@v4
        with:
          path: ~/.local/bin
          key: protoc-${{ env.PROTOC_VERSION }}-${{ runner.os }}
          restore-keys: |
            protoc-${{ env.PROTOC_VERSION }}-
            protoc-
      - name: install protoc
        uses: taiki-e/install-action@v2
        with:
          tool: protoc@${{ env.PROTOC_VERSION }}
      - name: Cache cargo-udeps
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin
          key: cargo-udeps-${{ runner.os }}
      - name: install cargo-udeps
        uses: taiki-e/install-action@cargo-udeps
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: cargo udeps
        run: cargo +nightly udeps
      - name: cargo udeps all-targets
        run: cargo +nightly udeps --all-targets  

  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Cache protoc
        uses: actions/cache@v4
        with:
          path: ~/.local/bin
          key: protoc-${{ env.PROTOC_VERSION }}-${{ runner.os }}
          restore-keys: |
            protoc-${{ env.PROTOC_VERSION }}-
            protoc-
      - name: install protoc
        uses: taiki-e/install-action@v2
        with:
          tool: protoc@${{ env.PROTOC_VERSION }}
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: "doc --lib --all-features"
        run: |
          cargo doc --lib --no-deps --all-features --document-private-items
        env:
          RUSTDOCFLAGS: -Dwarnings  

  test:
    needs: [lint, unused_dependencies]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Cache protoc
        uses: actions/cache@v4
        with:
          path: ~/.local/bin
          key: protoc-${{ env.PROTOC_VERSION }}-${{ runner.os }}
          restore-keys: |
            protoc-${{ env.PROTOC_VERSION }}-
            protoc-
      - name: install protoc
        uses: taiki-e/install-action@v2
        with:
          tool: protoc@${{ env.PROTOC_VERSION }}
      - uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo-chef
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin
          key: cargo-chef-${{ runner.os }}
      - name: Install cargo-chef
        run: cargo install cargo-chef --locked
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Prepare cargo-chef cache
        run: cargo chef prepare --recipe-path recipe.json
      - name: Build dependencies
        run: cargo chef cook --recipe-path recipe.json --release
      - name: Run tests
        run: cargo test --release